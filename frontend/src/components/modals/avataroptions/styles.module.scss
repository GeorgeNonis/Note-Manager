.backdrop {
  position: fixed;
  inset: 0 auto auto 0;
  width: 100%;
  height: 100vh;
  z-index: 10000044;
  background-color: rgba(10, 10, 10, 0.6);
}

@import "../../../styles/mixins.module.scss";

@media (max-width: 599px) {
  .xMark {
    width: 2rem;
    height: 2rem;
  }
  .modalContent {
    width: 90dvw;

    padding: 1rem 0 1rem 0;
  }

  .fromcomputer {
    place-self: center;
    width: 100%;
  }
  .modalImages {
    grid-template-columns: repeat(3, 23dvw);

    img {
      width: 5rem;
      height: 5rem;
    }
  }
  .svg {
    width: 2rem;
    height: 2rem;
  }
}
@media (max-width: 450px) {
  .xMark {
    width: 2rem;
    height: 2rem;
  }
  .modalContent {
    width: 90dvw;

    padding: 1rem 0 1rem 0;

    h1 {
      font-size: 1rem;
    }
  }
  .fromcomputer {
    place-self: center;
    width: 100%;
    h3 {
      font-size: 1rem;
    }
  }
  .modalImages {
    grid-template-columns: repeat(3, 23dvw);

    img {
      width: 5rem;
      height: 5rem;
    }
  }
  .svg {
    width: 2.5rem;
    height: 2.5rem;
  }
}
@media (min-width: 599px) {
  .xMark {
    width: 2.5rem;
    height: 2.5rem;
  }
  .modalContent {
    width: 90dvw;

    padding: 1rem 0 1rem 0;
    h1 {
      font-size: 1.5rem;
    }
  }
  .fromcomputer {
    place-self: center;
  }
  .modalImages {
    grid-template-columns: repeat(3, 23dvw);

    img {
      width: 6rem;
      height: 6rem;
    }
  }
  .svg {
    width: 3rem;
    height: 3rem;
  }
}
@media (min-width: 1200px) {
  .xMark {
    width: 2.5rem;
    height: 2.5rem;
  }
  .modalContent {
    width: 60dvw;
    padding: 1rem 0 1rem 0;
  }
  .fromcomputer {
    place-self: center;
  }
  .modalImages {
    grid-template-columns: repeat(3, 18dvw);
    img {
      width: 10rem;
      height: 10rem;
    }
  }

  .svg {
    width: 4rem;
    height: 4rem;
  }
}
@media (min-width: 2400px) {
  .xMark {
    width: 4rem;
    height: 4rem;
  }
  .modalContent {
    width: 60dvw;
    padding: 1rem 0 1rem 0;
    h1 {
      font-size: 2.5rem;
    }
  }
  .fromcomputer {
    place-self: center;
    h3 {
      font-size: 2.3rem;
    }
  }
  .modalImages {
    grid-template-columns: repeat(3, 15dvw);
    img {
      width: 14rem;
      height: 14rem;
    }
  }

  .svg {
    width: 6rem;
    height: 6rem;
  }
}

.modalContent {
  // padding: 1rem 2.5rem 1rem 2.5rem;
  box-sizing: border-box;
  border-radius: 8px;
  position: absolute;
  inset: 50% auto auto 50%;
  transform: translate(-50%, -50%);
  // width: 70dvw;
  height: 80dvh;
  background-color: #313235;
  z-index: 100000000;
  border: none;
  box-shadow: 0 1px 3px 0 rgb(0 0 0 / 60%), 0 4px 8px 3px rgb(0 0 0 / 30%);
  overflow-x: hidden;
  overflow-y: auto;
  h1 {
    margin: 0;
    // font-size: 1.7rem;
    font-weight: 300;
    font-family: "CormorantGaramond";
    text-align: center;
  }
  .actions {
    display: grid;
    margin-block: 1.5rem;
    .fromcomputer {
      position: relative;
      display: grid;
      place-items: center;
      justify-self: flex-end;
      margin: 0 0rem 1.5rem 0;
      width: 100%;
      border-radius: 8px;
      &:hover {
        background-color: #5d5d5d87;
      }
      button {
        pointer-events: none;
        all: unset;
      }
      .svg {
        pointer-events: none;
        // width: 3rem;
        // height: 3rem;
        path {
          stroke: #969ba1;
        }
      }
      h3 {
        // font-size: 1rem;
        font-family: "CormorantGaramond";
        color: #c8cdd3;
        margin: 0 auto 0;
      }
    }
  }
}

.input {
  cursor: pointer; /* <-- Let people know it's clickable */
  opacity: 0;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.modalImages {
  display: grid;
  place-content: center;
  place-items: center;
  place-self: center;
  grid-gap: 1.5rem;
  img {
    cursor: pointer;
    border-radius: 50%;
  }
}

.xMark {
  position: absolute;
  top: 1rem;
  right: 1rem;
  // width: 2rem;
  // height: 2rem;
  cursor: pointer;
  transition: all 230ms ease-in-out;
  &:hover {
    transform: rotate(180deg);
  }
}

.openModal {
  animation: openModal 0.4s ease-out forwards;
}

.closeModal {
  animation: closeModal 0.4s ease-out forwards;
}

@keyframes openModal {
  0% {
    opacity: 0;
    transform: translate(-50%, -100%);
  }
  50% {
    opacity: 1;
    transform: translate(-50%, -60%);
  }
  100% {
    opacity: 1;
    transform: translate(-50%, -50%);
  }
}

@keyframes closeModal {
  0% {
    opacity: 1;
    transform: translate(-50%, -50%);
  }
  50% {
    opacity: 0.8;
    transform: translate(-50%, -60%);
  }
  100% {
    opacity: 0;
    transform: translate(-50%, -100%);
  }
}
